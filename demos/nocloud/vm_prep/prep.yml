---
- hosts: all
  become: yes
  vars:
    ansible_python_interpreter: python3  
  pre_tasks:
    #- name: Install Python3
    #  when: ansible_os_family == "Debian"
    #  raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
    #  changed_when: False
    #- name: Install epel-release
    #  when: ansible_os_family == "RedHat"
    #  action: yum pkg='epel-release' state=present
    #- name: Install pip3
    #  action: "{{ ansible_pkg_mgr }} pkg=python3-pip state=present"
    #- name: Install Python3
    #  package:
    #    name: python3-pip
    #    state: present


    - name: Enable ipv4 forwarding
      sysctl: name="net.ipv4.ip_forward" value=1 sysctl_set=yes state=present reload=yes

#  roles:
#    - role: avinetworks.docker
#      docker_edition: ce
#      docker_live_restore: true


    - name: Install Docker (Redhat)
      when: ansible_os_family == "RedHat"
      action: "{{ ansible_pkg_mgr }} pkg={{ item }} state=present"
      with_items:
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
    
    -  when: ansible_os_family == "RedHat"
       get_url:
         url: https://download.docker.com/linux/centos/docker-ce.repo
         dest: /etc/yum.repos.d/docker-ce.repo


    - when: ansible_os_family == "RedHat"
      ini_file:
          dest: /etc/yum.repos.d/docker-ce.repo
          section: "{{ item }}"
          option: enabled
          value: 0
      with_items: ['docker-ce-test', 'docker-ce-edge']


    - when: ansible_os_family == "RedHat"
      action: yum pkg='docker-ce-3:18.09.1-3.el7' state=present

      
    - when: ansible_os_family == "RedHat"
      systemd:
        name: docker
        enabled: yes
        state: started


    - when: ansible_os_family == "RedHat"
      systemd:
        name: firewalld
        enabled: False
        state: stopped


    - when: ansible_os_family == "RedHat"
      systemd:
        name: docker
        enabled: yes
        state: restarted
  


    - name: Install Docker (Ubuntu)
      when: ansible_os_family == "Debian"
      action: "{{ ansible_pkg_mgr }} pkg=docker.io state=present"
    





